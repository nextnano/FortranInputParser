#++++++++++++++++++
# Variable section
#++++++++++++++++++

#----------------------------------------------------------------
# By default, we do not evaluate functions.
# Everything is just a simple "Find & Replace String" operation.
#----------------------------------------------------------------

# The % sign indicates that you define a variable which is case-sensitive.
!***macro*** %Material_1     = AlAs      # a string variable (1 replacement)
!***macro*** %ClusterNumbers = 7 8       # another string variable containing '7 8' including the blank (1 replacement)

!***macro*** %Temperature = 300.0        # temperature             (DisplayUnit:K) (2 replacements)
!***macro*** %alpha = 0.5405e-3          # Varshni parameter alpha (DisplayUnit:eV/K) (1 replacement)
!***macro*** %beta  = 204.0              # Varshni parameter beta  (DisplayUnit:K) (1 replacement)
!***macro*** %BandGap_0K   = 1.519       # band gap at 0 K         (DisplayUnit:eV) (1 replacement)

!***macro*** %Include_InAs = .TRUE.      # if .TRUE., include material InAs (1 replacement)
#%Include_InAs = .FALSE.     # if .FALSE., do not include material InAs

# The statement '%FunctionParser = yes' switches the function parser on (default: off).
!-----------------------------
!***macro*** %FunctionParser = yes       # needed to evaluate functions (DoNotShowInUserInterface) (1 replacement)
!-----------------------------

# Choose GaAs or AlAs

#%Include_GaAs = 1           # if 1 (=true), include material GaAs
!***macro*** %Include_GaAs = 0           # if 0 (=false), do not include material GaAs (1 replacement)
!***macro*** %Include_AlAs = 1 - 0.0e0  # if 1 (=true), include material AlAs, else 0 (=false) (1 replacement)

!***macro*** %BandGap_300K = 1.519 - 0.5405e-3 * 300.0^2 / ( 300.0 + 204.0 ) # band gap at 300 K (DisplayUnit:eV) (1 replacement)

!***macro*** %Material_2     = 'GaAs'    # a string variable after 'yes = yes' needs quotations marks (1 replacement)

!***macro*** %TWO   = 2.0 (1 replacement)
!***macro*** %SEVEN = INT( 5.0 + 2.00000000e0 )  # INT(...) must be used to convert a float to an integer (1 replacement)


!---------------------------------------------------------------------!
$magnetic-field                                                       !
 magnetic-field-on        = yes                                       ! 'yes'/'no'
 magnetic-field-strength  = 5.0                                       ! 5.0 T ==> T = [Tesla]
 magnetic-field-direction = 0 0 1                                     ! for [001] direction
$end_magnetic-field                                                   !
!---------------------------------------------------------------------!

!---------------------------------------------------------------------!
!  You can write comments.
#  This is also a comment.
// This is also a comment.
/* This is also a comment. */
// Note: No line breaks are allowed for the comments /* ... */.

!---------------------------------------------------------------------!
$material                                                             ! begin of input sequence for this keyword

 material-number                         = 1                          ! material no. 1
 cluster-numbers                         = 1 3 5 6                    ! an array of integers
 material-name                           = Al(x)Ga(1-x)As             ! a string
 alloy-function                          = constant                   ! a string
 alloy-concentration                     = 0.3    ! You can write 0.3, 0.3d0 or 0.3e0. It will always be treated as double.
 band-gaps                               = 1.4  2.0  3.0              ! an array of double values
 crystal-type                            = zincblende                 ! a string
 use-material-parameters-from-database   = .TRUE.                     ! a boolean

 !-----------------------------------------------------------------------------------
 ! Now we define material no. 2.
 ! The first specifier 'material-number' acts as a separator for new input sequence.
 !-----------------------------------------------------------------------------------
 material-number                         = 2                          ! separator for new input sequence
 cluster-numbers                         = 2 4
 material-name                           = GaAs

 material-number                         = 3                          ! material no. 3
 cluster-numbers                         = 7 8
 material-name                           = AlAs

 material-number = 4   cluster-numbers = 9    material-name = GaAs ! This is a comment. You can specify several specifiers in one line.
 material-number = 5   cluster-numbers = 10   material-name = AlAs
 material-number = 6   cluster-numbers = 11   material-name = GaAs   band-gaps = 1.42248214e0  1.9  2.1

 material-number = 7  cluster-numbers = 11   material-name = GaAs

#---------------------------------------------------------
# Conditional IF/WHEN statements are supported like this:
#---------------------------------------------------------

               material-number = 8   cluster-numbers = 12   material-name = InAs

#WHEN %Include_GaAs material-number = 9   cluster-numbers = 13   material-name = GaAs  # '#WHEN' has the same effect as '#IF'.
               material-number = 9   cluster-numbers = 13   material-name = AlAs  # '#WHEN' has the same effect as '#IF'.

$end_material                                                         ! This is matching end keyword.
!---------------------------------------------------------------------!
